/*!
 * jQuery UI Stars v3.0.X
 * http://plugins.jquery.com/project/Star_Rating_widget
 *
 * Copyright (c) 2008-2011 Marek "Orkan" Zajac (orkans@gmail.com)
 * Dual licensed under the MIT and GPL licenses.
 * http://docs.jquery.com/License
 *
 * THIS IS AN UNOFFICIAL RELEASE WITH INCLUDED PATCH FOR JQUERY 1.6
 *
 * Depends:
 *	jquery.ui.core.js
 *	jquery.ui.widget.js
 *
 */
(function (e) { e.widget("ui.stars", { options: { inputType: "radio", split: 0, disabled: false, cancelTitle: "Cancel Rating", cancelValue: 0, cancelShow: true, disableValue: true, oneVoteOnly: false, showTitles: false, captionEl: null, callback: null, starWidth: 16, cancelClass: "ui-stars-cancel", starClass: "ui-stars-star", starOnClass: "ui-stars-star-on", starHoverClass: "ui-stars-star-hover", starDisabledClass: "ui-stars-star-disabled", cancelHoverClass: "ui-stars-cancel-hover", cancelDisabledClass: "ui-stars-cancel-disabled" }, _create: function () { function i(e, r) { if (e != -1) { var i = r ? n.starHoverClass : n.starOnClass; var u = r ? n.starOnClass : n.starHoverClass; t.$stars.eq(e).prevAll("." + n.starClass).addBack().removeClass(u).addClass(i); t.$stars.eq(e).nextAll("." + n.starClass).removeClass(n.starHoverClass + " " + n.starOnClass); t._showCap(n.id2title[e]) } else s() } function s() { t.$stars.removeClass(n.starOnClass + " " + n.starHoverClass); t._showCap("") } var t = this, n = this.options, r = 0; this.element.data("former.stars", this.element.html()); n.isSelect = n.inputType == "select"; this.$form = e(this.element).closest("form"); this.$selec = n.isSelect ? e("select", this.element) : null; this.$rboxs = n.isSelect ? e("option", this.$selec) : e(":radio", this.element); this.$stars = this.$rboxs.map(function (i) { var s = { value: this.value, title: (n.isSelect ? this.text : this.title) || this.value, isDefault: n.isSelect && this.defaultSelected || this.defaultChecked }; if (i == 0) { n.split = typeof n.split != "number" ? 0 : n.split; n.val2id = []; n.id2val = []; n.id2title = []; n.name = n.isSelect ? t.$selec.get(0).name : this.name; n.disabled = n.disabled || (n.isSelect ? e(t.$selec).prop("disabled") : e(this).prop("disabled")) } if (s.value == n.cancelValue) { n.cancelTitle = s.title; return null } n.val2id[s.value] = r; n.id2val[r] = s.value; n.id2title[r] = s.title; if (s.isDefault) { n.checked = r; n.value = n.defaultValue = s.value; n.title = s.title } var u = e("<div/>").addClass(n.starClass); var a = e("<a/>").attr("title", n.showTitles ? s.title : "").text(s.value); if (n.split) { var f = r % n.split; var l = Math.floor(n.starWidth / n.split); u.width(l); a.css("margin-left", "-" + f * l + "px") } r++; return u.append(a).get(0) }); n.items = r; n.isSelect ? this.$selec.remove() : this.$rboxs.remove(); this.$cancel = e("<div/>").addClass(n.cancelClass).append(e("<a/>").attr("title", n.showTitles ? n.cancelTitle : "").text(n.cancelValue)); n.cancelShow &= !n.disabled && !n.oneVoteOnly; n.cancelShow && this.element.append(this.$cancel); this.element.append(this.$stars); if (n.checked === undefined) { n.checked = -1; n.value = n.defaultValue = n.cancelValue; n.title = "" } this.$value = e("<input type='hidden' name='" + n.name + "' value='" + n.value + "' />"); this.element.append(this.$value); this.$stars.bind("click.stars", function (e) { if (!n.forceSelect && n.disabled) return false; var r = t.$stars.index(this); n.checked = r; n.value = n.id2val[r]; n.title = n.id2title[r]; t.$value.val(n.value); t.$value.prop("disabled", n.disabled); i(r, false); t._disableCancel(); !n.forceSelect && t.callback(e, "star") }).bind("mouseover.stars", function () { if (n.disabled) return false; var e = t.$stars.index(this); i(e, true) }).bind("mouseout.stars", function () { if (n.disabled) return false; i(t.options.checked, false) }); this.$cancel.bind("click.stars", function (e) { if (!n.forceSelect && (n.disabled || n.value == n.cancelValue)) return false; n.checked = -1; n.value = n.cancelValue; n.title = ""; t.$value.val(n.value); n.disableValue && t.$value.prop("disabled", true); s(); t._disableCancel(); !n.forceSelect && t.callback(e, "cancel") }).bind("mouseover.stars", function () { if (t._disableCancel()) return false; t.$cancel.addClass(n.cancelHoverClass); s(); t._showCap(n.cancelTitle) }).bind("mouseout.stars", function () { if (t._disableCancel()) return false; t.$cancel.removeClass(n.cancelHoverClass); t.$stars.triggerHandler("mouseout.stars") }); this.$form.bind("reset.stars", function () { !n.disabled && t.select(n.defaultValue) }); e(window).on("unload",function () { t.$cancel.unbind(".stars"); t.$stars.unbind(".stars"); t.$form.unbind(".stars"); t.$selec = t.$rboxs = t.$stars = t.$value = t.$cancel = t.$form = null }); this.select(n.value); n.disabled && this.disable() }, _disableCancel: function () { var e = this.options, t = e.disabled || e.oneVoteOnly || e.value == e.cancelValue; if (t) this.$cancel.removeClass(e.cancelHoverClass).addClass(e.cancelDisabledClass); else this.$cancel.removeClass(e.cancelDisabledClass); this.$cancel.css("opacity", t ? .5 : 1); return t }, _disableAll: function () { var e = this.options; this._disableCancel(); if (e.disabled) this.$stars.filter("div").addClass(e.starDisabledClass); else this.$stars.filter("div").removeClass(e.starDisabledClass) }, _showCap: function (e) { var t = this.options; if (t.captionEl) t.captionEl.text(e) }, value: function () { return this.options.value }, select: function (e) { var t = this.options, n = e == t.cancelValue ? this.$cancel : this.$stars.eq(t.val2id[e]); t.forceSelect = true; n.triggerHandler("click.stars"); t.forceSelect = false }, selectID: function (e) { var t = this.options, n = e == -1 ? this.$cancel : this.$stars.eq(e); t.forceSelect = true; n.triggerHandler("click.stars"); t.forceSelect = false }, enable: function () { this.options.disabled = false; this._disableAll() }, disable: function () { this.options.disabled = true; this._disableAll() }, destroy: function () { this.$form.unbind(".stars"); this.$cancel.unbind(".stars").remove(); this.$stars.unbind(".stars").remove(); this.$value.remove(); this.element.unbind(".stars").html(this.element.data("former.stars")).removeData("stars"); return this }, callback: function (e, t) { var n = this.options; n.callback && n.callback(this, t, n.value, e); n.oneVoteOnly && !n.disabled && this.disable() } }); e.extend(e.ui.stars, { version: "@VERSION@" }) })(jQuery)