@model Page<Invoice>
@{
    Layout = "~/Views/Admin/_AdminLayout.cshtml";
    ViewBag.PageName = Html.AdminResource("LineageString_SiteFeesReportNew");
    string returnUrl = Request.Url.PathAndQuery;
}

<script>
    $(document).ready(function () {
        //when sort dropdown is changed, submit the form
        $("select#SortFilterOptions").change(function () {
            $("input#submitDropDown").click();
        });
    });
</script>
<div class="group">
    @using (Html.BeginForm(new { page = 0 }))
    {
        <div class="form-inline clearfix ">
            
            <div class="dual-input addon">
                <div class="input-group-addon">
                    <span class="glyphicon glyphicon-calendar"></span>
                </div>
                @{ Html.RenderDateInput(Fields.FromDate, null, new { @class = "form-control", @placeholder = Html.AdminResource("FromDate") }); }
            
                @{ Html.RenderDateInput(Fields.ToDate, null, new { @class = "form-control", @placeholder = Html.AdminResource("ToDate") }); }
            </div>
            <input type="submit" class="btn btn-default" id="submitDropDown" value="@Html.AdminResource("Go")" />

            <div class="input-group pull-right">
                <label class="input-group-addon">
                    @Html.AdminResource("Sort")
                </label>
                @Html.DropDownList(MVC.SortFilterOptions, null, new { @class = "form-control" })
            </div>
        </div>
                    }
</div>
<script>
    $(document).ready(function () {

        //[Email Fees] button click
        $(".EmailFeesButton").click(function () {
            var invId = $(this).attr("targetInvoiceId");
            var payerUn = $(this).attr("targetPayerUserName");
            EmailInvoice('@Templates.SellerSendFees.ToJavascriptSafeString()', invId, payerUn);
            $(this).html('@Html.AdminResource("EmailSent")')
                    .addClass("btn-success")
                    .removeClass("btn-default")
                    .attr("disabled", "disabled");
            return false;
        });

        //[AttemptBatchPaymentButton] button click
        $(".AttemptBatchPaymentButton").click(function () {
            var invId = $(this).attr("targetInvoiceId");
            var result = AttemptBatchPayment(invId);
            if (result) {
                $(this).html('@Html.GlobalResource("Approved")')
                    .addClass("DisabledButton")
                    .removeClass("DefaultButton")
                    .attr("disabled", "disabled");
                $(".EmailFeesButton[targetInvoiceId=" + invId + "]").addClass("DisabledButton")
                    .removeClass("DefaultButton")
                    .attr("disabled", "disabled");
            } else {
                $(this).html('@Html.GlobalResource("Declined")')
                    .addClass("DisabledButton")
                    .removeClass("DefaultButton")
                    .attr("disabled", "disabled");
            }
            return false;
        });
    });
</script>

<div class="panel panel-default">
    <table class="table table-striped">
        <tr>
            <th>@Html.AdminResource("InvoiceID")</th>
            <th>@Html.AdminResource("UserName")</th>
            <th>@Html.AdminResource("DateCreated")</th>
            <th>@Html.AdminResource("Total")</th>
            @if (SiteClient.BoolSetting("CreditCardsEnabled"))
            {
                <th>&nbsp;</th>
            }
            <th>&nbsp;</th>
        </tr>
        @{ BatchPaymentCapability retVal = BatchPaymentCapability.Disabled; }
        @foreach (Invoice invoice in Model.List)
        {
            <tr>
                <td>
                    @Html.ActionLink(Html.AdminResource("View") + " " + invoice.ID.ToString(), "InvoiceDetail", new { id = invoice.ID, returnUrl }, new { @class = "btn btn-default btn-xs" })
                </td>
                <td>@invoice.Payer.UserName</td>
                <td>@Html.LocalDTTM(invoice.CreatedDTTM, "g")</td>
                <td>@Html.LocalCurrency(invoice.Total, invoice.Currency)</td>
                @{ bool creditCardsEnabled = SiteClient.BoolSetting("CreditCardsEnabled"); }
                @if (creditCardsEnabled)
                {
                    string details;
                    retVal = AccountingClient.GetBatchPaymentStatus(Context.User.Identity.Name, invoice, out details);
                    details = Html.AdminResource(details).ToHtmlString();
                    <td>
                        @switch (retVal)
                        {
                            case BatchPaymentCapability.Valid:

                                <button type="button" class="btn btn-success btn-xs" data-container="body" data-toggle="popover" data-placement="left" data-content="@Html.AdminResource("BatchPaymentValid")">
                                    <span class="glyphicon glyphicon-ok-sign"></span>
                                </button>
                                break;
                            case BatchPaymentCapability.InvalidProviderParameters:
                            case BatchPaymentCapability.MissingPaymentParameters:
                            case BatchPaymentCapability.Expired:
                                //bad

                                <button type="button" class="btn btn-warning btn-xs" data-container="body" data-toggle="popover" data-placement="left" data-content="@details">
                                    <span class="glyphicon glyphicon-info-sign"></span>
                                </button>
                                break;
                            case BatchPaymentCapability.InvalidInvoice:
                            case BatchPaymentCapability.Unknown:
                            case BatchPaymentCapability.Disabled:
                                //worse

                                <button type="button" class="btn btn-danger btn-xs" data-container="body" data-toggle="popover" data-placement="left" data-content="@details">
                                    <span class="glyphicon glyphicon-exclamation-sign"></span>
                                </button>
                                break;
                        }
                    </td>
                }

                <td class="text-right">
                    @if (creditCardsEnabled && retVal == BatchPaymentCapability.Valid)
                {
                        <button class="btn btn-default btn-xs AttemptBatchPaymentButton" targetinvoiceid="@invoice.ID">@Html.AdminResource("ManualChargeButtonText")</button>
                    }
                    <button class="btn btn-default btn-xs EmailFeesButton" targetinvoiceid="@invoice.ID" targetpayerusername="@invoice.Payer.UserName">@Html.AdminResource("EmailFees")</button>
                </td>
            </tr>
                    }
    </table>
    @if (Model.TotalItemCount == 0)
    {
        <p class="no-history">
            @Html.AdminResource("NoResults")
        </p>
    }
</div>
@if (Model.TotalPageCount > 1) { Html.RenderPageNumberLinks(Model); }
<script>
    $(function () {
        $('[data-toggle="popover"]').popover()
    })
</script>