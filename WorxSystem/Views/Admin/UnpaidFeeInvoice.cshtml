@model Invoice
@{
    bool payerIsTaxExempt = Model.Payer.Properties.Any(up => up.Field.Name == StdUserProps.TaxExempt && up.Value != null)
        ? bool.Parse(Model.Payer.Properties.First(up => up.Field.Name == StdUserProps.TaxExempt).Value) : false;
}
<script>
    $(document).ready(function () {
        $("#EmailFeesButton").click(function () {
            EmailInvoice('@Templates.SellerSendFees.ToJavascriptSafeString()', @Model.ID, '@Model.Payer.UserName');
            $(this).html('@Html.AdminResource("EmailSent")')
                   .addClass("DisabledButton")
                   .removeClass("DefaultButton")
                   .attr("disabled", "disabled");
            return false;
        });
    });
</script>
<div class="group">
    <div class="pull-right">
        <button class="btn btn-default" id="EmailFeesButton">@Html.AdminResource("EmailFees")</button>
        @(Html.ButtonLink(Html.GlobalResource("MarkPaid"), "SetInvoicePaid",
                        new { id = Model.ID, paid = true, returnUrl = ViewData[Fields.ReturnUrl] }, new { @class = "btn btn-default" }))
        <script>
            $(document).ready(function () {
                $("#PrintInvoice").click(function () {
                    window.open('@Html.GetActionUrl("PrintInvoice", new { id = Model.ID }).ToMvcHtmlString().ToJavascriptSafeString()', '_blank', 'width=980,height=600');
                    return false;
                });
            });
        </script>
        <button id="PrintInvoice" class="btn btn-default">@Html.GlobalResource("PrintInvoice")</button>
    </div>
    @Html.Partial("BackButton")
</div>
<div class="panel panel-default">
    <table class="table">
        <tr>
            <td><strong>@Html.AdminResource("DateCreated"):</strong> @Html.LocalDTTM(Model.CreatedDTTM, "g")</td>
            <td></td>
        </tr>

        <tr>
            <td>
                <strong>@SiteClient.Settings[SiteProperties.FriendlySiteName]</strong>
                <br />
                @Model.OwnerName
                <br />
                @Model.OwnerStreet1
                @if (!string.IsNullOrEmpty(Model.OwnerStreet2))
                {
                    <br />
                    @Model.OwnerStreet2
                }
                <br />
                @Model.OwnerCity, @Model.OwnerStateRegion @Model.OwnerZipPostal @Model.OwnerCountry
            </td>
            <td>
                <strong>@Html.AdminResource("BillingAddress")</strong>
                @Html.ActionLink("[Change]", MVC.SetBillingAddressAction, MVC.AdminController, new { invoiceID = Model.ID }, null)<br />
                @if (!string.IsNullOrEmpty(Model.BillingCountry))
                {
                    @(string.Format("{0} {1}", Model.BillingFirstName, Model.BillingLastName))<br />
                    @Model.BillingStreet1<br />
                    if (!string.IsNullOrEmpty(Model.BillingStreet2))
                    {
                        @Model.BillingStreet2<br />
                    }
                    @Model.BillingCity@:, @Model.BillingStateRegion @Model.BillingZipPostal @Model.BillingCountry
                }
                else
                {
                    <div class="no-address">@Html.GlobalResource("AddressNotDefined")</div>
                }
            </td>
        </tr>

    </table>
</div>

<div class="panel panel-default">
    <table class="table">
        <tr>
            <td colspan="4" class="warning form-inline">
                @using (Html.BeginForm("AddInvoiceAdjustment", "Admin"))
                {
                    @Html.Hidden(Fields.ReturnUrl)

                    var creditDebitDropdownOpts = (List<SelectListItem>)ViewData[Fields.AdjustmentAmountTypes];
                    <div class="form-group">
                        <div class="input-group">
                            <span class="input-group-addon">@Html.AdminResource("AdjustInvoice")</span>
                            @Html.DropDownList(Fields.AdjustmentCreditDebit, new SelectList(creditDebitDropdownOpts, "Value", "Text"), new { @class = "form-control input-sm" })
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="input-group">
                            <span class="input-group-addon">@SiteClient.SiteCurrencySymbol</span>
                            @Html.TextBox(Fields.AdjustmentAmount, null, new { @class = "form-control input-sm" })
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="input-group">
                            <span class="input-group-addon">@Html.GlobalResource("Description")</span>
                            @(Html.TextBox(Fields.AdjustmentDescription, null,
                            new { @class = "form-control input-sm", maxlength = 1000 }))
                        </div>
                    </div>
                    <div class="form-group">
                        <input type="submit" class="btn btn-default btn-sm" value="@Html.AdminResource("Apply")" />
                    </div>
                    @Html.Hidden(Fields.InvoiceID, Model.ID)
                }

            </td>
        </tr>
        <tr>
            <td colspan="4" class="success text-right">
                @if (SiteClient.BoolSetting(SiteProperties.VATEnabled))
                {
                    @Html.GlobalResource("Subtotal")<text>:&nbsp;&nbsp;</text>
                    <strong>@Html.LocalCurrency(Model.Subtotal, Model.Currency)</strong><text>&nbsp;&nbsp;&nbsp;&nbsp;</text>
                    @Html.GlobalResource("VAT")<text>:&nbsp;&nbsp;</text>
                    if (!payerIsTaxExempt)
                    {
                        <strong>@Html.LocalCurrency(Model.SalesTax, Model.Currency)</strong><text>&nbsp;&nbsp;&nbsp;&nbsp;</text>
                    }
                    else
                    {
                        <strong>@Html.GlobalResource("TaxExempt")</strong><text>&nbsp;&nbsp;&nbsp;&nbsp;</text>
                    }
                }
                @Html.AdminResource("Total"):&nbsp;&nbsp;
                <strong>@Html.LocalCurrency(Model.Total, Model.Currency)</strong>
            </td>
        </tr>
        @{
            string deleteLineItemWarning = // "This line item will be permanently deleted.\nAre you sure?";
                Html.AdminResourceString("DeleteLineItemWarning1").ToJavascriptSafeString() + "\\n"
                    + Html.AdminResourceString("DeleteLineItemWarning2").ToJavascriptSafeString();
            var currentPageOfLineItems = (Page<LineItem>)ViewData["PageOfLineitems"];
        }
        @foreach (LineItem lineItem in currentPageOfLineItems.List)
        {
            string listingTitle = lineItem.Properties.ContainsKey(LineItemProperties.Listing)
                ? lineItem.Properties[LineItemProperties.Listing] : string.Empty;
            <tr>
                <td>
                    @Html.ButtonLink(Html.AdminResourceString("Remove"), MVC.RemoveLineItemAction, MVC.AdminController,
                        new { lineItemID = lineItem.ID, invoiceID = Model.ID, returnUrl = ViewData[Fields.ReturnUrl] },
                        new { @class = "btn btn-default btn-xs DeleteLineItemButton" }, deleteLineItemWarning)
                </td>
                <td>
                    @lineItem.Description
                    @if (!string.IsNullOrEmpty(lineItem.LotNumber))
                    {
                        @Html.ActionLink(string.Format("({0})", Html.GlobalResourceString("LotNumberX", lineItem.LotNumber)),
                    MVC.DetailsAction, MVC.ListingController, new { id = lineItem.ListingID }, null)
                        <br />
                        <small class="text-muted">
                            <em>
                                @Html.LocalDTTM(lineItem.DateStamp, "g")&nbsp;&nbsp;
                                @listingTitle
                            </em>
                        </small>
                    }
                    else if (lineItem.ListingID.HasValue)
                    {
                        @Html.ActionLink(string.Format("({0}: {1})", Html.GlobalResourceString("ListingNum"), lineItem.ListingID),
                    MVC.DetailsAction, MVC.ListingController, new { id = lineItem.ListingID }, null)
                        <br />
                        <small class="text-muted">
                            <em>
                                @Html.LocalDTTM(lineItem.DateStamp, "g")&nbsp;&nbsp;
                                @listingTitle
                            </em>
                        </small>
                    }
                </td>
                <td class="text-right">@Html.LocalCurrency(lineItem.TotalAmount, lineItem.Currency)</td>
            </tr>
        }
    </table>
</div>

@{var pageOfLineItems = (Page<LineItem>)ViewData["PageOfLineitems"];}
@if (pageOfLineItems.TotalPageCount > 1)
{
    Html.RenderPageNumberLinks(pageOfLineItems.PageIndex, pageOfLineItems.TotalPageCount, MVC.InvoiceDetailAction, MVC.AdminController, new { @id = Model.ID, returnUrl = ViewData[Fields.ReturnUrl] }, null, null);
}
@Html.Partial("PaymentHistory")
