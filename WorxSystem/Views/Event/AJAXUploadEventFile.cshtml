@model List<Media>

@Html.ToolTipContent("UploadMediaPDF_Help", Html.GlobalResource("UploadMediaPDF_Help"))
<!--<form enctype="multipart/form-data" method="post">-->

    @Html.GlobalResource("UploadPDFs")

<!--</form>     -->

@Html.Partial("AJAXUploadFile_PDF")

<script>

    function RefreshOrder_File() {
        var files = $(".filecontainer");
        for (var x = 0; x < files.length; x++) {
            $(".filecontainer .order:eq(" + x + ")").val(x);
        }
    }

    $(document).ready(function () {
        if (window.File && window.FileList) {
            $("#html5Additionalfiles").change(handleAdditionalFileSelect);

            var ie_version = getIEVersion();
            var safari_version = getSafariVersion();
            if ((ie_version.major > 0 && ie_version.major < 11) || (safari_version > 0 && safari_version < 7)) {
                // programmatically triggering file select causes IE9 & 10 to disallow form submission, so show file input object instead of "Add Image(s)" button...
                $("#html5Additionalfiles").removeClass("hidden");
            } else {
                $("#html5Additionalbutton").show();
            }
        } else {
            $("#myFile").show();
            $("#myFile").makeAsyncUploaderWithSuccessOrErrorHandlers({
                upload_url: $.url('Media/AsyncUploadFile'),
                flash_url: 'Content/swf/swfupload.swf',
                button_image_url: 'Content/images/blankButton.png',
                disableDuringUpload: 'INPUT[type="submit"]',
                button_text: '@Html.GlobalResource("ChooseFiles").ToJavascriptSafeString()',
                file_queue_error_handler: function (file, code, msg) {
                    BootstrapDialog.show({
                        type: 'type-danger',
                        title: '<span class="glyphicon glyphicon-warning-sign"></span>',
                        message: '@Html.GlobalResourceString("AJAX_SorryGenericFileNotUploaded").ToJavascriptSafeString()',
                        buttons: [
                        {
                            label: '@Html.GlobalResourceString("OK").ToJavascriptSafeString()',
                            action: function (dialogItself) {
                                dialogItself.close();
                            }
                        }
                        ]
                    });
                },
                upload_error_handler: function (file, code, msg) {
                    BootstrapDialog.show({
                        type: 'type-danger',
                        title: '<span class="glyphicon glyphicon-warning-sign"></span>',
                        message: '@Html.GlobalResourceString("AJAX_SorryGenericFileNotUploaded").ToJavascriptSafeString()',
                        buttons: [
                        {
                            label: '@Html.GlobalResourceString("OK").ToJavascriptSafeString()',
                            action: function (dialogItself) {
                                dialogItself.close();
                            }
                        }
                        ]
                    });
                }
                /* function(file, code, msg) { alert("Sorry, your file wasn't uploaded: " + msg); } */
            }, function (fileName, fileSize, fileType, guid, uri, title) {
                eval("addFile_" + fileType + "(fileName, fileSize, fileType, guid, uri, title);");
                $("input#FilesRendererState").val($("div#filescontainer").html());
                RefreshOrder_File();
            }, function (error) {
                BootstrapDialog.show({
                    type: 'type-danger',
                    title: '<span class="glyphicon glyphicon-warning-sign"></span>',
                    message: error,
                    buttons: [
                    {
                        label: '@Html.GlobalResourceString("OK").ToJavascriptSafeString()',
                        action: function (dialogItself) {
                            dialogItself.close();
                        }
                    }
                    ]
                });
            });

        }

        @{
            if (Model != null)
            {
                List<Media> mediaList = Model.Where(m => m.Context == MediaUploadContexts.UploadFile).ToList();

                if (mediaList.Count > 0)
                {
                    foreach (Media media in mediaList)
                    {
                        @:eval("addFile_@(media.Default.MetaData["Type"])('@media.Default.MetaData["OriginalFileName"].Replace("\\", "&#92;").ToMvcHtmlString()',@media.Default.MetaData["Size"], '@media.Default.MetaData["Type"]', '@media.GUID', '', '@media.Default.MetaData["Title"].ToJavascriptSafeString()');");
                                                                    }
                }
            }
        }

        if ($("input#FilesRendererState").val() != "") {
            $("div#filescontainer").html($("input#FilesRendererState").val());
            //bind media Title properly
            @{
                foreach (string key in ViewContext.ViewData.ModelState.Where(ms => ms.Key.StartsWith("media_title_")).Select(ms => ms.Key))
                {
                    @:$("#@(key)").val("@(ViewContext.ViewData.ModelState[key].Value.RawValue)");
                                                                                }
            }
        }

        RefreshOrder_File();
    });

    var files;

    function handleAdditionalFileSelect() {
        files = new Array();
        for (var i = 0, singleFile; singleFile = this.files[i]; i++) {
            files.push(singleFile);
        }

        var file = files.shift();
        if (file != undefined) {
            $("#additional_progress_bar").slideDown();
            UploadAdditionalFile(file);
        }
    }

    function updateAdditionalProgress(evt) {
        // evt is an ProgressEvent.
        //While the request entity body is being uploaded and the upload complete flag is false,
        //queue a task to fire a progress event named progress at the XMLHttpRequestUpload object
        //about every 50ms or for every byte transmitted, whichever is least frequent.
        //- W3 XMLHttpRequest Level 2 (Bolded for emphasis)
        if (evt.lengthComputable) {
            var percentLoaded = Math.round((evt.loaded / evt.total) * 100);
            // Increase the progress bar length.
            if (percentLoaded < 100) {
                $('#additional_progress_bar.percent').css("width", percentLoaded + "%");
                $('#additional_progress_bar.percent').text(percentLoaded + "%");
            }
        }
    }

    function successAdditionalHandler(result) {
        if (result.error) {
            BootstrapDialog.show({
                type: 'type-danger',
                title: '<span class="glyphicon glyphicon-warning-sign"></span>',
                message: result.error,
                buttons: [
                    {
                        label: '@Html.GlobalResourceString("OK").ToJavascriptSafeString()',
                        action: function (dialogItself) {
                            dialogItself.close();
                        }
                    }
                ]
            });
        } else {
            eval("addFile_" + result.type + "(\"" + result.name + "\", " + result.size + ", \"" + result.type + "\", \"" + result.guid + "\", \"" + result.uri + "\", \"" + result.title + "\");");
            $("input#FilesRendererState").val($("div#filescontainer").html());
            RefreshOrder_File();
        }
        $('#additional_progress_bar.percent').css("width", "100%");
        $('#additional_progress_bar.percent').text("100%");
        //addImage('unk', 'unk', 'unk', result.guid, result.uri);
        @*eval("addFile_@(media.Default.MetaData["Type"])('@media.Default.MetaData["OriginalFileName"]',@media.Default.MetaData["Size"], '@media.Default.MetaData["Type"]', '@media.GUID', '');");*@
        var file = files.shift();
        if (file != undefined) {
            UploadAdditionalFile(file);
        } else {
            $("#additional_progress_bar").slideUp('slow');
            $("#html5Additionalfiles").val("");
        }
    }

    function UploadAdditionalFile(file) {
        var formData = new FormData();
        formData.append("file", file);
        $.ajax({
            url: $.url("Media/AsyncUploadFile"),  //server script to process data
            type: 'POST',
            xhr: function () {  // custom xhr
                var myXhr = $.ajaxSettings.xhr();
                if (myXhr.upload) { // check if upload property exists
                    myXhr.upload.addEventListener('progress', updateAdditionalProgress, false); // for handling the progress of the upload
                }
                return myXhr;
            },
            //Ajax events
            //beforeSend: beforeSendHandler,
            //success: successAdditionalHandler,
            //error: errorHandler,
            // Form data
            data: formData,
            //Options to tell JQuery not to process data or worry about content-type
            cache: false,
            contentType: false,
            processData: false
        }).done(function (results) {
            successAdditionalHandler(results);
        }).fail(function (e) {
            //alert('@Html.GlobalResource("AJAX_SorryGenericFileNotUploaded").ToJavascriptSafeString()'/* + ': ' + msg*/);
            BootstrapDialog.show({
                type: 'type-danger',
                title: '<span class="glyphicon glyphicon-warning-sign"></span>',
                message: '@Html.GlobalResourceString("AJAX_SorryGenericFileNotUploaded").ToJavascriptSafeString()',
                buttons: [
                    {
                        label: '@Html.GlobalResourceString("OK").ToJavascriptSafeString()',
                        action: function (dialogItself) {
                            dialogItself.close();
                        }
                    }
                ]
            });
            $("#additional_progress_bar").slideUp('slow');
        });
    }

    function DeleteFile(guid) {
        $.ajax({
            url: $.url("Media/DeleteMedia"),  //server script to process data
            type: 'POST',
            //Ajax events
            //beforeSend: beforeSendHandler,
            //success: successAdditionalHandler,
            //error: errorHandler,
            // Form data
            data: { guid: guid },
            //Options to tell JQuery not to process data or worry about content-type
            cache: false
            //contentType: false,
            //processData: false
        });
    }

    $(document).ready(function () {        
        $(document).on("click", "a.deletefile", function () {
            var closestFileContainer = $(this).closest(".filecontainer");
            var guid = closestFileContainer.children("input[type=hidden]:first").val();
            closestFileContainer.remove();
            $("input#FilesRendererState").val($("div#filescontainer").html());
            RefreshOrder_File();
            DeleteFile(guid);
            return false;
        });
    });

</script>

    <input type="file" id="myFile" name="myFile" class="hidden" />
    <button class="btn btn-default awe-hidden" id="html5Additionalbutton" onclick="$('#html5Additionalfiles').click();return false;">@Html.GlobalResource("ChooseFiles_HTML5")</button>
    @Html.ToolTipButton("UploadMediaPDF_Help")
    <input type="file" id="html5Additionalfiles" name="files[]" multiple class="hidden" />
    <div id="additional_progress_bar" class="awe-hidden"><div class="percent">0%</div></div>

<div id="filescontainer"></div>


@Scripts.Render("~/bundles/imageupload")